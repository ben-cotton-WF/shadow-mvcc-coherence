<?xml version="1.0"?>

<!--

Copyright 2012 Shadowmist Ltd.

This file is part of Shadow MVCC for Oracle Coherence.

Shadow MVCC for Oracle Coherence is free software: you can redistribute 
it and/or modify it under the terms of the GNU General Public License 
as published by the Free Software Foundation, either version 3 of the 
License, or (at your option) any later version.

Shadow MVCC for Oracle Coherence is distributed in the hope that it 
will be useful, but WITHOUT ANY WARRANTY; without even the implied 
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See 
the GNU General Public License for more details.
                        
You should have received a copy of the GNU General Public License
along with Shadow MVCC for Oracle Coherence.  If not, see 
<http://www.gnu.org/licenses/>.

-->



<cache-config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xmlns="http://xmlns.oracle.com/coherence/coherence-cache-config"
              xsi:schemaLocation="http://xmlns.oracle.com/coherence/coherence-cache-config coherence-cache-config.xsd">
	<defaults>
		<serializer>
			<instance>
				<class-name>com.tangosol.io.pof.ConfigurablePofContext</class-name>
				<init-params>
					<init-param>
						<param-type>String</param-type>
						<param-value system-property="pof-config-file">mvcc-pof-config.xml</param-value>
					</init-param>
				</init-params>
			</instance>
		</serializer>

	</defaults>

  <caching-scheme-mapping>
    <cache-mapping>
      <cache-name>*</cache-name>
      <scheme-name>example-distributed</scheme-name>
    </cache-mapping>

  </caching-scheme-mapping>

  <caching-schemes>
    <!--
    Distributed caching scheme.
    -->
    <distributed-scheme>
      <scheme-name>example-distributed</scheme-name>
      <service-name>DistributedCache</service-name>

      <thread-count>2</thread-count>
      <partition-count>13</partition-count>
      <backing-map-scheme>
        <local-scheme>
          <scheme-ref>example-binary-backing-map</scheme-ref>
        </local-scheme>
      </backing-map-scheme>

      <autostart>true</autostart>
    </distributed-scheme>

    <local-scheme>
      <scheme-name>example-binary-backing-map</scheme-name>
    </local-scheme>

  <invocation-scheme>
    <scheme-name>invocation-service</scheme-name>
    <service-name>InvocationService</service-name>
    <thread-count>2</thread-count>
    <autostart>true</autostart>
  </invocation-scheme>

  </caching-schemes>
</cache-config>